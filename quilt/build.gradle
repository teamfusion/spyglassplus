plugins {
  id "com.github.johnrengelman.shadow" version "7.1.2"
}

repositories {
  maven { url "https://maven.quiltmc.org/repository/release/" }
}

architectury {
  platformSetupLoomIde()
  loader("quilt")
}

loom {
  accessWidenerPath = project(":common").loom.accessWidenerPath
}

sourceSets.main.resources.srcDirs += project(":common").file(project.output_datagen)

configurations {
  common
  shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
  compileClasspath.extendsFrom common
  runtimeClasspath.extendsFrom common
  developmentQuilt.extendsFrom common
}

dependencies {
  modImplementation "org.quiltmc:quilt-loader:${rootProject.ver_quilt_loader}"
  modApi "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${rootProject.ver_quilted_fabric_api}"
  modApi("dev.architectury:architectury-fabric:${rootProject.ver_architectury}") {
    exclude group: "net.fabricmc"
    exclude group: "net.fabricmc.fabric-api"
  }

  modApi("me.shedaniel.cloth:cloth-config-fabric:${rootProject.ver_cloth_config}") {
    exclude(group: "net.fabricmc.fabric-api")
  }

  common(project(path: ":common", configuration: "namedElements")) { transitive false }
  shadowCommon(project(path: ":common", configuration: "transformProductionQuilt")) { transitive false }
}

processResources {
  inputs.property "group", rootProject.maven_group
  inputs.property "version", project.version

  filesMatching("quilt.mod.json") {
    expand "group": rootProject.maven_group,
        "version": project.version
  }
}

shadowJar {
  exclude "architectury.common.json"

  configurations = [project.configurations.shadowCommon]
  classifier "dev-shadow"
}

remapJar {
  injectAccessWidener = true
  input.set shadowJar.archiveFile
  dependsOn shadowJar
  classifier null
}

jar {
  classifier "dev"
}

sourcesJar {
  def commonSources = project(":common").sourcesJar
  dependsOn commonSources
  from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
  withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
    skip()
  }
}

publishing {
  publications {
    mavenQuilt(MavenPublication) {
      artifactId = archivesBaseName
      from components.java
    }
  }

  repositories {
  }
}
